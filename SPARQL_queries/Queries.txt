Query1: Ordering Planet Diameter

PREFIX ns1: <http://www.dei.unipd.it/database2/IMDbOntology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
 
SELECT distinct?PlanetName ?Diameter
WHERE { 
    ?s a ns1:Planet ;
       ns1:name ?PlanetName ;
       ns1:diameter ?Diameter
} 
ORDER BY DESC (?Diameter)
LIMIT 50

-----------------------------------------------Query_2-------------------------------------

Query2: Characters who has either vehicle or starship

PREFIX ns1: <http://www.dei.unipd.it/database2/IMDbOntology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?CharacterName 
       (GROUP_CONCAT(DISTINCT ?VehicleName; separator=', ') AS ?Vehicles)
       (GROUP_CONCAT(DISTINCT ?StarshipName; separator=', ') AS ?Starships)
WHERE {
   ?Character a ns1:Character ;
              ns1:name ?CharacterName .
   
   {
      ?Character ns1:hasVehicle ?Vehicle .
      ?Vehicle ns1:name ?VehicleName .
   }
   UNION
   {
      ?Character ns1:hasStarship ?Starship .
      ?Starship ns1:name ?StarshipName .
   }
}
GROUP BY ?CharacterName 

-----------------------------------------------Query_3-------------------------------------

Query3: Starships with the descending number of Passenger numbers and representing the crew number for each starship

PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX ns1: <http://www.dei.unipd.it/database2/IMDbOntology/>

SELECT ?StarshipName ?PassengersNumber ?CrewNumber
WHERE {
    
   ?Starship a ns1:Starship ;
              ns1:name ?StarshipName ;
              ns1:passengers ?PassengersNumber;
              ns1:crew ?CrewNumber
}
GROUP BY ?StarshipName ?PassengersNumber ?CrewNumber
ORDER BY DESC (?PassengersNumber) 

-----------------------------------------------Query_4-------------------------------------

Query4:Representing the character who which hair color has and shouwing how many characters has that color, imlied only to those characters who has one hair color.

PREFIX ns1: <http://www.dei.unipd.it/database2/IMDbOntology/>
PREFIX ns1: <http://www.dei.unipd.it/database2/IMDbOntology/>

SELECT ?HairColor (COUNT(?Character) AS ?CharacterCount) 
                  (GROUP_CONCAT(DISTINCT ?CharacterName; separator=', ') AS ?Characters)
WHERE {
   ?Character a ns1:Character ;
              ns1:name ?CharacterName ;
              ns1:hairColor ?HairColor .
   FILTER (?HairColor != 'none')
}
GROUP BY ?HairColor